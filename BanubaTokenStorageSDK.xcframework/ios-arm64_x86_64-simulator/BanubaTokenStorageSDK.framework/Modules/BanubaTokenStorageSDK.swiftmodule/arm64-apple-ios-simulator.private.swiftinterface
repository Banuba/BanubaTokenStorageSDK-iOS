// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name BanubaTokenStorageSDK
// swift-module-flags-ignorable: -enable-bare-slash-regex
@_exported import BanubaTokenStorageSDK
import BanubaUtilities
import Foundation
import Swift
import _Concurrency
import _StringProcessing
public enum TokenProviderErrorType : Swift.Error {
  case databaseError(error: Swift.Error?)
  case databaseSettingsError
  case localTokenNotFound
  case snapshotError
  case noInternetConnection
}
public class RemoteTokenProvider : BanubaTokenStorageSDK.TokenProvidable {
  final public let targetURL: Swift.String
  public init(targetURL: Swift.String)
  public func observeToken(succesEvent: @escaping (Swift.String?) -> Swift.Void, errorEvent: @escaping (Swift.Error) -> Swift.Void)
  @objc deinit
}
public protocol TokenProvidable : AnyObject {
  func observeToken(succesEvent: @escaping (_ token: Swift.String?) -> Swift.Void, errorEvent: @escaping (_ error: Swift.Error) -> Swift.Void)
}
public class VideoEditorTokenProvider {
  public var tokenProvider: BanubaTokenStorageSDK.TokenProvidable? {
    get
  }
  public init(tokenProvider: BanubaTokenStorageSDK.TokenProvidable?)
  public func loadToken(completion: @escaping (_ error: BanubaTokenStorageSDK.TokenProviderErrorType?, _ token: Swift.String?) -> Swift.Void)
  @objc deinit
}
